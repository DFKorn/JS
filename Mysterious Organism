// Mysterious Organism
// Codecademy => JavaScript Syntax, Part II => Challenge Project: Mysterious Organism



// Returns a random DNA base
const returnRandBase = () => {
  const dnaBases = ['A', 'T', 'C', 'G']
  return dnaBases[Math.floor(Math.random() * 4)] 
}

// Returns a random single stand of DNA containing 15 bases
const mockUpStrand = () => {
  const newStrand = []
  for (let i = 0; i < 15; i++) {
    newStrand.push(returnRandBase())
  }
  return newStrand
}


const pAequorFactory = (specimenNum, dna) => {
  return {
    specimenNum,
    dna,
    //responsible for randomly selecting a base in the objectâ€™s dna property and changing the current base to a different base.
    mutate(){
      let randBase = Math.floor(Math.random() * 15)
      let diffBase = returnRandBase()
      while(this.dna[randBase] === diffBase){
        diffBase = returnRandBase()
      }
      this.dna[randBase] = diffBase
    },
    //compare the DNA sequences of different P. aequor
    compareDNA(pAequor){
      let matches = 0;
      for (let i = 0; i < this.dna.length; i++){
        if (this.dna[i] === pAequor.dna[i]){
          matches++
        }
      }
      let percentage = matches / (this.dna.length -1) * 100;
      console.log(`specimen #${this.specimenNum} and spicimen #${pAequor.specimenNum} have ${percentage.toFixed(2)}% DNA in common.`)
    },
    //P.aequor have a likelier chance of survival if their DNA is made up of at least 60% 'C' or 'G' bases.
    willLikelySurvive(){
      let countBases = 0;
      this.dna.forEach(base => {
        if (base === 'C' || base === 'G'){
          countBases++
        }
      }
      )
      let persantage = countBases / (this.dna.length -1) * 100;
      if (persantage >= 60){
        return true
      }else{
        return false
      }
    },
  }
}

//create 30 instances of pAequor that can survive
let instArchive =[];
let number = 1;
while(instArchive.length < 30){
  let specimen = pAequorFactory(number, mockUpStrand());
  if(specimen.willLikelySurvive() === true){
    instArchive.push(specimen)
    number++
  }
}



const foo = pAequorFactory(1, mockUpStrand())
console.log(foo.dna)
//foo.mutate()
console.log(foo.dna)

const bar = pAequorFactory(2, mockUpStrand())
console.log(bar.dna)

foo.compareDNA(bar)
console.log(foo.willLikelySurvive())
//console.log(instArchive)

